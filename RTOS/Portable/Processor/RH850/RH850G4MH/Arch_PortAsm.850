/* PRQA S 3108++ */
/**
 * Copyright (C) 2008-2025 isoft Infrastructure Software Co., Ltd.
 * SPDX-License-Identifier: LGPL-2.1-only-with-exception
 *
 * This library is free software; you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by the Free Software Foundation; version 2.1.
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License along with this library;
 * if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 * or see <https://www.gnu.org/licenses/>.
 */
/* PRQA S 3108-- */
/*
********************************************************************************
**                                                                            **
**  FILENAME    : Arch_PortAsm.850                                            **
**                                                                            **
**  Created on  :                                                             **
**  Author      : i-soft-os                                                   **
**  Vendor      :                                                             **
**  DESCRIPTION : Context switch                                              **
**                                                                            **
**  SPECIFICATION(S) :   AUTOSAR classic Platform r19                         **
**  Version :   AUTOSAR classic Platform R19--Function Safety                 **
**                                                                            **
*******************************************************************************/
/*=======[I N C L U D E S]====================================================*/

/*=======[E X T E R N A L   D A T A]==========================================*/
    .extern _OS_GetSystemStackPointer
    .extern _OS_GetTaskStackPointer
    .extern _Os_ArchMasterSp
    .extern _Os_ArchTempSp
    .extern _OS_SaveTaskStackPointer
    .extern _Os_SwitchTask
    .extern _RESET
    
    .extern _Os_Vector_Handler
    .extern _Os_FE_Handler
    .extern _Os_FENMI
    .extern _Os_MipMdp

    OS_FEINC_BASE_ADDR_PE0 .equ 0xFF9A3B00U
    OS_FEINC_BASE_ADDR_PE1 .equ 0xFF9A3C00U
    OS_FEINC_BASE_ADDR_PE2 .equ 0xFF9A3D00U
    OS_FEINC_BASE_ADDR_PE3 .equ 0xFF9A3E00U

/*=======[M A C R O S]========================================================*/
/*--------------------------return PE number in r10----------------------*/
.macro GETPEID
    stsr	0, r10, 2
    andi	0x7, r10, r10
    .endm

/*--------------------------Load and Switch to system stack----------------------*/
.macro LOAD_SYSTEM_STACK
    jarl _OS_GetSystemStackPointer,lp
    mov    _Os_ArchMasterSp, r6
    st.w   sp,0[r6]
    mov    _Os_ArchTempSp, r7
    ld.w   0[r7], r7
    mov    r7, sp
    .endm
/*-------------------------------------------------------------------------------*/

/*--------------------------Load and Switch to task stack------------------------*/
.macro LOAD_TASK_STACK
    jarl _OS_GetTaskStackPointer, lp
    mov _Os_ArchTempSp, r6
    ld.w 0[r6], sp
    .endm
/*-------------------------------------------------------------------------------*/

/*--------------------------Disable FE&EI interrupt------------------------------*/
.macro DISABLE_FEANDEI_INT
        pushsp r1-r2
        stsr psw, r2
        ori 0xa0, r2, r2
        ldsr r2, psw
        popsp r1-r2
    .endm
/*-------------------------------------------------------------------------------*/

/*--------------------------Enable FE&EI interrupt-------------------------------*/
.macro ENABLE_FEANDEI_INT
        pushsp r1-r2
        stsr psw, r2
        mov 0xFFFFFF5FU,r1
        and  r1, r2
        ldsr r2, psw
        popsp r1-r2
    .endm
/*-------------------------------------------------------------------------------*/

/*--------------------------Resum fpu Context---------------------------------*/
.macro OS_ARCH_RESUME_FPU_CONTEXT
    popsp r8-r13
    ldsr  r8,6,0      /*---resume fpsr--*/
    ldsr  r9,7,0      /*---resume fpepc--*/
    ldsr  r10,8,0     /*---resume fpst--*/
    ldsr  r11,9,0     /*---resume fpcc--*/
    ldsr  r12,10,0    /*---resume fpcfg--*/
    ldsr  r13,11,0    /*---resume fpec--*/
    .endm
/*-------------------------------------------------------------------------------*/

/*--------------------------Save fpu Context---------------------------------*/
.macro OS_ARCH_SAVE_FPU_CONTEXT
    stsr  6,r8,0      /*---save fpsr--*/
    stsr  7,r9,0      /*---save fpepc--*/
    stsr  8,r10,0     /*---save fpst--*/
    stsr  9,r11,0     /*---save fpcc--*/
    stsr  10,r12,0    /*---save fpcfg--*/
    stsr  11,r13,0    /*---save fpec--*/
    pushsp r8-r13
    .endm
/*-------------------------------------------------------------------------------*/


/*--------------------------resum thread Context---------------------------------*/
.macro OS_ARCH_RESUME_CONTEXT_1
#if ( 1 == CFG_FPU_ENABLE)
    OS_ARCH_RESUME_FPU_CONTEXT
#endif
    popsp r6-r7
    ldsr  r6,0,0    /*---resume eipc--*/
    ldsr  r7,1,0    /*---resume eipsw--*/
    popsp r6-r31  
    popsp r1-r2
    .endm
/*-------------------------------------------------------------------------------*/

/*--------------------------Save thread Context----------------------------------*/
.macro OS_ARCH_SAVE_CONTEXT_1
    pushsp r1-r2               /*-- Push register to sp */
    pushsp r6-r31
    stsr 0, r6,0               /*-- save eipc to r6*/
    stsr 1, r7,0               /*-- save eipsw to r7*/
    pushsp r6-r7               /*-- push eipc and eipsw*/
#if (1 == CFG_FPU_ENABLE)
    OS_ARCH_SAVE_FPU_CONTEXT
#endif
    mov _Os_ArchTempSp, r21   /* -- Save Current sp */
    st.w sp, 0[r21]             
    .endm
/*-------------------------------------------------------------------------------*/

/*--------------------------Save FEENTER Context----------------------------------*/
.macro OS_ARCH_SAVE_CONTEXT_FEENTER
    PUSHSP r1-r2              /*-- Push register to sp*/
    PUSHSP r4-r31             
    stsr 2, r6,0              /*--save fepc to r6*/
    stsr 3, r7,0              /*--save fepsw to r7*/
    pushsp r6-r7              /*--push fepc and fepsw*/
    mov _Os_ArchTempSp, r21   /*--Save Current sp*/
    st.w sp, 0[r21]        
    .endm
/*-------------------------------------------------------------------------------*/

/*--------------------------RESUME FEENTER Context----------------------------------*/
.macro OS_ARCH_RESUME_CONTEXT_FEENTER
    popsp r6-r7
    ldsr  r6,2,0    /*--resume fepc--*/
    ldsr  r7,3,0    /*--resume fepsw--*/
    popsp r4-r31
    popsp r1-r2
    .endm
/*-------------------------------------------------------------------------------*/

/*=======[F U N C T I O N   I M P L E M E N T A T I O N S]====================*/

/*-------------------------------------------------------------------------------*/
/*                                                                               */
/*                           Switch to privileged mode                           */
/*                                                                               */
/*-------------------------------------------------------------------------------*/
    .align 4
_Os_ArchSetSvMode:
    pushsp r1-r2
    stsr 1, r2, 0      /* r2 = EIPSW */
    mov 0xBFFFFFFF, r1
    and r1, r2         /* r2.bit30 = 0 */
    ldsr r2, 1, 0      /* EIPSW = r2(UM=0) */
    stsr psw, R2       /* PSW = r2(UM=0) */
    popsp r1-r2
    eiret

/*-------------------------------------------------------------------------------*/
/*                                   Trap 1                                      */
/*                   Terminate thread  &   Promote privileges                    */
/*                                                                               */
/*-------------------------------------------------------------------------------*/
    .global Os_SystemCall_Trap1
    .align 4
Os_SystemCall_Trap1:
    /*--------disable interrupt---------*/
    DISABLE_FEANDEI_INT

    pushsp r1-r2
    stsr eiic, r2
    andi 0xF, r2, r2
    cmp 0, r2
    bz _StartScheduler
    cmp 1, r2
    bz _SetSvMode

/*---Terminate thread:switch and restore the context without saving the context--*/
_StartScheduler:
    popsp r1-r2
    LOAD_SYSTEM_STACK        /*--load system stack and switch sp--*/
    jarl _Os_SwitchTask, lp  /*--Switch thread--*/
    LOAD_TASK_STACK          /*--load Task stack and switch sp--*/
    OS_ARCH_RESUME_CONTEXT_1 /*--resume thread--*/

    /*------Return-----*/
    eiret

/*----- Promote privileges----*/
_SetSvMode:
    popsp r1-r2
    jr _Os_ArchSetSvMode

/*-------------------------------------------------------------------------------*/
/*                                   Trap 0                                      */
/*                  system scheduling:Save and restore context                   */
/*                                                                               */
/*-------------------------------------------------------------------------------*/
    .global Os_SystemCall_Trap0
    .align 4
Os_SystemCall_Trap0:
    /*--------disable interrupt---------*/
   DISABLE_FEANDEI_INT

   /*---save context-----*/
   OS_ARCH_SAVE_CONTEXT_1

   jarl _OS_SaveTaskStackPointer, lp

   /*--load system stack and switch sp--*/
   LOAD_SYSTEM_STACK

   /*--Switch thread--*/
   jarl _Os_SwitchTask, lp

   /*--load Task stack and switch sp--*/
   LOAD_TASK_STACK

    /*--resume thread--*/
   OS_ARCH_RESUME_CONTEXT_1
    
    /*------Return-----  */
    eiret

/*-------------------------------------------------------------------------------*/
/*                                                                               */
/*                                 Os_ISR1Handler                                */
/*                                                                               */
/*-------------------------------------------------------------------------------*/
    .global _Os_ISR1Handler
    .align 4
_Os_ISR1Handler:
    /*--------disable interrupt---------*/
    DISABLE_FEANDEI_INT

    /*----save context-----*/
    OS_ARCH_SAVE_CONTEXT_1

    /*-----Get exception number-----*/
    stsr eiic, r2
    andi 0xFFF, r2, r2
    shl 2,r2

    /*-----Get interrupt entry address----- */
    mov _Os_Vector_Handler, r1
    add r2, r1
    ld.w 0[r1],r1

    /*----jump to interrupt service function---*/
    jmp [r1]

/*-------------------------------------------------------------------------------*/
/*                                                                               */
/*                            EI interrupt operations                            */
/*                                                                               */
/*-------------------------------------------------------------------------------*/
    .global _Os_ISR2Handler
    .align 4
_Os_ISR2Handler:
    /*--------disable interrupt---------*/
    DISABLE_FEANDEI_INT

    /*----save context-----*/
    OS_ARCH_SAVE_CONTEXT_1

    /*-----Get exception number-----*/
    stsr eiic, r2
    andi 0xFFF, r2, r2
    shl 2,r2

    /*-----Get interrupt entry address----- */
    mov _Os_Vector_Handler, r1
    add r2, r1
    ld.w 0[r1],r1

    /*----jump to interrupt service function---*/
    jmp [r1]


/*-------------------------------------------------------------------------------*/
/*                                                                               */
/*                          EI interrupt exit processing                         */
/*                                                                               */
/*-------------------------------------------------------------------------------*/
    .global _Os_ISR2Exit
    .align 4
_Os_ISR2Exit:
    /*------load sp-----*/
    mov _Os_ArchTempSp, r6
    ld.w 0[r6], sp

    /*------resume thread context---*/
    OS_ARCH_RESUME_CONTEXT_1

    /*------Return-----  */
    eiret

/*-------------------------------------------------------------------------------*/
/*                                                                               */
/*                          EI interrupt exit processing                         */
/*                                                                               */
/*-------------------------------------------------------------------------------*/
    .global _Os_ISR1Exit
    .align 4
_Os_ISR1Exit:
    /*------load sp-----*/
    mov _Os_ArchTempSp, r6  
    ld.w 0[r6], sp 
    OS_ARCH_RESUME_CONTEXT_1

    /*------Return-----  */
    eiret

/*-------------------------------------------------------------------------------*/
/*                                                                               */
/*                             FE interrupt operations                           */
/*                                                                               */
/*-------------------------------------------------------------------------------*/
    .global Os_FEHandler
    .align 4
Os_FEHandler:
    /*--------disable interrupt---------*/
    DISABLE_FEANDEI_INT

    /*----save context-----*/
    OS_ARCH_SAVE_CONTEXT_FEENTER

    /*-----Get exception number-----*/
    mov OS_FEINC_BASE_ADDR_PE0, r2
    ld.w 0[r2], r2
    sch1r r2, r2
    add -1, r2
    shl 2,r2

    mov _Os_FE_Handler, r1
    add r2, r1
    ld.w 0[r1],r1
    jmp [r1]

/*-------------------------------------------------------------------------------*/
/*                                                                               */
/*                           EI interrupt exit processing                        */
/*                                                                               */
/*-------------------------------------------------------------------------------*/
    .global Os_FeISRExit
    .align 4
Os_FeISRExit:
    /*------load sp-----*/
    mov _Os_ArchTempSp, r6
    ld.w 0[r6], sp

    /*------resume thread context---*/
    OS_ARCH_RESUME_CONTEXT_FEENTER

    /*------Return-----  */
    eiret


/*-------------------------------------------------------------------------------*/
/*                                                                               */
/*                               Os_ExceptionTable                               */
/*                                                                               */
/*-------------------------------------------------------------------------------*/
    .global _Os_ExceptionTable
    .align 0x200
_Os_ExceptionTable:
    /* 0x00 */
    jr _RESET

    /* 0x10 SYSERR */
    .align 0x10
_SYSERR:
    jr _SYSERR

    /* 0x20 Reserve */
    .align 0x10
_HVTRAP:
    jr _HVTRAP

    /* 0x30 FETRAP */
    .align 0x10
_FETRAP:
    jr _FETRAP

    /* 0x40	TRAP0 : System Dispatch*/
    .align 0x10
    jr Os_SystemCall_Trap0
_SYSTEMCALL_ERROR:
    jr _SYSTEMCALL_ERROR

    /* 0x50	TRAP1 : System StartScheduler / Privilege Change */
    .align 0x10
    jr Os_SystemCall_Trap1
    jr _SYSTEMCALL_ERROR

    /* 0x60	RIE :  */
    .align 0x10
_RIE:
    jr _RIE

    /* 0x70	FPE_FXE :  */
    .align 0x10
_FPE_FXE:
    jr _FPE_FXE

    /* 0x80	UCPOP :  */
    .align 0x10
_UCPOP:
    jr _UCPOP

    /* 0x90 MDP/MIP */
    .align 0x10
    jr _Os_MipMdp

    /* 0xA0 PIE */
    .align 0x10
_PIE:
    jr _PIE

    /* 0xB0 Reserve */
    .align 0x10
_none_ERROR2:
    jr _none_ERROR2

    /* 0xC0	MAE */
    .align 0x10
_MAE:
    jr _MAE

    /* 0xD0 Reserve */
    .align 0x10
_BGFEINT_BGEIINT:
    jr _BGFEINT_BGEIINT

    /* 0xE0	Os_FENMI :  */
    .align 0x10
    jr _Os_FENMI

    /* 0xF0	FEINT :  */
    .align 0x10
    jr Os_FEHandler

    /* 0x100	EIINT0-2047	Direct Method priority0*/
    .align 0x10
    jr _Os_ISR1Handler

    /* 0x110	EIINT0-2047	Direct Method priority1*/
    .align 0x10
    jr _Os_ISR1Handler

    /* 0x120	EIINT0-2047	Direct Method priority2*/
    .align 0x10
    jr _Os_ISR1Handler

    /* 0x130	EIINT0-2047	Direct Method priority3*/
    .align 0x10
    jr _Os_ISR1Handler

    /* 0x140	EIINT0-2047	Direct Method priority4*/
    .align 0x10
    jr _Os_ISR1Handler

    /* 0x150	EIINT0-2047	Direct Method priority5*/
    .align 0x10
    jr _Os_ISR1Handler

    /* 0x160	EIINT0-2047	Direct Method priority6*/
    .align 0x10
    jr _Os_ISR2Handler

    /* 0x170	EIINT0-2047	Direct Method priority7*/
    .align 0x10
    jr _Os_ISR2Handler

    /* 0x180	EIINT0-2047	Direct Method priority8*/
    .align 0x10
    jr _Os_ISR2Handler

    /* 0x190	EIINT0-2047	Direct Method priority9*/
    .align 0x10
    jr _Os_ISR2Handler

    /* 0x1A0	EIINT0-2047	Direct Method priority10*/
    .align 0x10
    jr _Os_ISR2Handler

    /* 0x1B0	EIINT0-2047	Direct Method priority11*/
    .align 0x10
    jr _Os_ISR2Handler

    /* 0x1C0	EIINT0-2047	Direct Method priority12*/
    .align 0x10
    jr _Os_ISR2Handler

    /* 0x1D0	EIINT0-2047	Direct Method priority13*/
    .align 0x10
    jr _Os_ISR2Handler

    /* 0x1E0	EIINT0-2047	Direct Method priority14*/
    .align 0x10
    jr _Os_ISR2Handler

    /* 0x1F0	EIINT0-2047	Direct Method priority15*/
    .align 0x10
    jr _Os_ISR2Handler

/*=======[E N D   O F   F I L E]==============================================*/
